[{"content":"나는 소프트웨어 개발자이다. 그리고 나는 좋은 개발자가 되고 싶다. 좋은 개발자는 좋은 개발을 하는 사람이다. 좋은 개발은 무엇일까? 이 물음은 조금 막연해보인다. 이 질문에 대한 답을 찾아보고자 한다.\n1. 주어진 시간 안에, 원하는 기능을, 원하는 기간동안 개발자는 애플리케이션을 만든다. 애플리케이션은 특정 기능을 수행하도록 만들어진다. 계산기를 만들든, 채팅 서비스를 만들든, 하다못해 \u0026ldquo;hello world!\u0026ldquo;만을 출력하는 간단한 프로그램을 만들든 간에 수행해야 하는 기능이 있다. 원하는 기능이 수행되도록 개발해야 한다.\n\u0026ldquo;어떤 기능을 한다.\u0026ldquo;는 말은 \u0026ldquo;지금 당장\u0026quot;만을 뜻하는 것은 아닐 것이다. 개발의 결과물로 생긴 기능은 원하는 기간동안 동작해야 한다. 담당자가 지속하겠다는 의지가 있는 한 계속 동작해야한다. 그렇기에 원하는 기간동안 동작하는 개발을 해야한다.\n고려해야하는 기간은 또 있다. 개발은 시간을 소모한다. 이 시간은 무한정 주어지지 않는 경우가 대부분이다. 회사에서는 서비스의 출시에 맞춰 개발을 해야하는 것처럼 말이다. 이 시간 안에 완성되지 않은 개발은 의미가 없어져 버릴 가능성이 높다.\n여기서 내가 결론 낸 좋은 개발의 첫 번째는 원하는 기간동안 원하는 기능을 하는 것을 주어진 시간 안에 만드는 것이다. 아주 당연하고 단순한 문장이지만, 어떤 개발을 해야하는가라는 질문을 하면 가장 먼저 생각나지 않는 경우가 많은 것 같다. 유연하고 확장성 있는 개발, 읽기 쉬운 개발, 최신 기술을 사용하는 개발도 좋지만, 주어진 시간 안에 원하는 기능을 원하는 기간동안 수행하는 개발을 가장 최우선으로 여겨야 한다.\n2. 잘 변화되는 개발 원하는대로, 원하는 기간동안 동작하는 애플리케이션을 만든다고 끝이 아니다. 개발의 결과로 만들어진 애플리케이션은 항상 그 상태와 그 기능만을 유지하고 있지는 않을 것이다. 사용자의 피드백을 받아 더 많은 기능을 만들수도 있고, 비용 절감을 위해 더 적은 리소스로 동일한 기능을 수행하게 하는 리팩터링을 진행할 수도 있다. 이것들의 공통점은 애플리케이션에 변화가 생긴다는 점이다.\n앞서 말한 것처럼 애플리케이션의 변화는 여러 방식으로 일어날 수 있다. 기능의 추가, 리팩터링, 버그의 수정, 외부 라이브러리 변경에 대한 대응 등 너무나 많은 변경이 일어날 수 있다. 그러면 좋은 개발은 애플리케이션의 변화가 \u0026ldquo;잘\u0026rdquo; 되게끔 하는 것도 포함될 것 같다.\n기존 기능은 잘 동작하도록 기존 기능을 수정하고자 하는 의도가 아니라면, 변화가 일어난다고 해서 기존의 기능에 대한 변경이 있으면 안된다. 개발을 할 때 이것저것이 너무 얽혀있어 어디엔가 영향을 주는지 모르거나, 영향을 주는지는 알지만 그 영향에 대한 대응이 감당하기 어려운 상태여서는 안된다.\n많은 개발 방법론, 패러다임에서 말하고 있는 낮은 결합도가 이것을 위한 것이다. 많이 결합되어 있다는 말은 서로 다른 기능들이 서로서로 너무 깊게 관여하고 있어 변경이 어려운 상태를 의미한다. 그 반대가 낮은 결합도이다. 낮은 결합도는 기능들이 독립적으로 혹은 적은 연관성을 가지고 있어 하나의 변경이 다른 기능에 영향을 주지 않거나, 혹은 그 영향이 쉽게 예측됨을 의미한다.\n연관 있는 것은 함께 변경되도록 동일한 로직이 여기저기 흩어져서 중복되어 있다면 어떤 점이 문제일까. 해당 로직을 변경할 때 여기저기 찾아다니며 수정을 해야한다. 그 과정에서 놓치는 경우도 있을 것이다. 이렇게 여기저기 퍼져있는 동일한 로직은 변경을 어렵게 만들 가능성이 높다.\n변화가 일어날 때 함께 변경되어야 하는 것들이 모여 있는 것을 흔히 높은 응집도가 있다고 말한다. 애플리케이션의 변경이 필요할 때 응집도가 높은 코드는 어떤 부분을 어떻게 변경해야하는 지 명확히 알 수 있게 해준다.\n다른 사람도 이해할 수 있도록 개발은 여럿이서 하는 경우가 많다. 회사에서는 팀원들과 함께 코드를 공유하며 개발을 한다. 그렇기에 애플리케이션의 변화는 내가 아닌 타인에 의해서 일어날 수도 있다. 타인에 의해 변화가 일어나야 하는데 그 사람이 코드나 아키텍쳐를 이해하지 못한다면 변화가 잘 되게 만든 개발은 아닐 것이다. 개발을 같이 하는 사람들이 있다면, 그 사람들이 이해할 수 있는 방식으로 개발을 해야한다.\n결론 나는 \u0026ldquo;좋은 개발이 무엇인가? 어떤 개발을 하고 싶은가?\u0026ldquo;라는 질문에 이렇게 대답할 것이다.\n개발의 목적을 잘 달성해야 한다. 원하는 대로 동작해야 한다. 원하는 기간만큼 동작해야 한다. 주어진 시간 안에 완료되어야 한다. 변화가 잘 되어야 한다. 낮은 결합도로 원하지 않는 변화는 피해야 한다. 높은 응집력으로 연관된 것들을 적은 동선으로 수정할 수 있어야 한다. 다른 사람들과 컨텍스트를 공유해야 한다. ","permalink":"https://lcm8728.github.io/posts/good-development/","summary":"나는 소프트웨어 개발자이다. 그리고 나는 좋은 개발자가 되고 싶다. 좋은 개발자는 좋은 개발을 하는 사람이다. 좋은 개발은 무엇일까? 이 물음은 조금 막연해보인다. 이 질문에 대한 답을 찾아보고자 한다.\n1. 주어진 시간 안에, 원하는 기능을, 원하는 기간동안 개발자는 애플리케이션을 만든다. 애플리케이션은 특정 기능을 수행하도록 만들어진다. 계산기를 만들든, 채팅 서비스를 만들든, 하다못해 \u0026ldquo;hello world!\u0026ldquo;만을 출력하는 간단한 프로그램을 만들든 간에 수행해야 하는 기능이 있다. 원하는 기능이 수행되도록 개발해야 한다.\n\u0026ldquo;어떤 기능을 한다.\u0026ldquo;는 말은 \u0026ldquo;지금 당장\u0026quot;만을 뜻하는 것은 아닐 것이다.","title":"좋은 개발"}]